package com.advatix.entities;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonBackReference;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

@Entity
@Table(name = "author")
@ApiModel(description = " All attribute of Author data ")
public class Author {

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@ApiModelProperty(notes = "autoGeneratedId")
	@Column(name = "id")
	private int id;

	@ApiModelProperty(notes = "first name at least 2 character",required = true)
	@Column(name = "first_name")
	private String firstName;

	@ApiModelProperty(notes = "last name at least 2 character",required = true)
	@Column(name = "last_name")
	private String lastName;

	@ApiModelProperty(notes = "language",required = true)
	@Column(name = "language")
	private String language;
	
	@OneToOne(mappedBy = "author")
	@ApiModelProperty(notes = "book attribute",required = true)
	@JsonBackReference
	private Book book;
	
	public Author() {
	}

	public Author(String firstName, String lastName, String language, Book book) {
		super();
		this.firstName = firstName;
		this.lastName = lastName;
		this.language = language;
		this.book = book;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getLanguage() {
		return language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	public Book getBook() {
		return book;
	}

	public void setBook(Book book) {
		this.book = book;
	}

	@Override
	public String toString() {
		return "Author [id=" + id + ", firstName=" + firstName + ", lastName=" + lastName + ", language=" + language
				+ ", book=" + book + "]";
	}
	
	

}
